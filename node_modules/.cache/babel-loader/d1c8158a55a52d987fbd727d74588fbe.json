{"ast":null,"code":"var _jsxFileName = \"/Users/baurzhan/Desktop/star-wars-project/src/components/contet/index.jsx\",\n    _s = $RefreshSig$();\n\nimport swCharacters from \"../../data/characters.json\";\nimport swPlanets from \"../../data/planets.json\";\nimport swStarships from \"../../data/starships.json\";\nimport { useState } from \"react\";\nimport { ItemLists } from \"../sw-item-lists\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Content = _ref => {\n  _s();\n\n  let {\n    handleCreateFan\n  } = _ref;\n  const [selector, setSelector] = useState(\"Character\"); //initial value : Character\n\n  const handleSelectorChange = event => {\n    // console.log(event.target.value)\n    setSelector(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: selector,\n        placeholder: \"Choose your path\",\n        className: \"select-item\",\n        onChange: handleSelectorChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Characters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Planets\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Starships\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 10\n      }, this), selector === \"Characters\" && swCharacters.map(character =>\n      /*#__PURE__*/\n      //here && means if left side is true, then show the right side\n      _jsxDEV(ItemLists, {\n        item: character,\n        handleCreateFan: handleCreateFan,\n        type: \"chars\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"gender: \", character.gender]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"birthday: \", character.birth_year]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)]\n      }, character.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 10\n      }, this)), selector === \"Planets\" && swPlanets.map(planets =>\n      /*#__PURE__*/\n      //here && means if left side is true, then show the right side\n      _jsxDEV(ItemLists, {\n        item: planets,\n        handleCreateFan: handleCreateFan,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"orbital period: \", planets.orbital_period]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"rotational period: \", planets.rotation_period]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 16\n        }, this)]\n      }, planets.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Content, \"SAMYL6Qhg5HmTxVzpZgGTv1YFjA=\");\n\n_c = Content;\n\nvar _c;\n\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"names":["swCharacters","swPlanets","swStarships","useState","ItemLists","Content","handleCreateFan","selector","setSelector","handleSelectorChange","event","target","value","map","character","gender","birth_year","name","planets","orbital_period","rotation_period"],"sources":["/Users/baurzhan/Desktop/star-wars-project/src/components/contet/index.jsx"],"sourcesContent":["import swCharacters from \"../../data/characters.json\";\nimport swPlanets from \"../../data/planets.json\";\nimport swStarships from \"../../data/starships.json\";\n\nimport { useState } from \"react\";\n\nimport { ItemLists } from \"../sw-item-lists\";\n\nexport const Content = ({handleCreateFan}) => {\n\n   const [selector, setSelector] = useState(\"Character\"); //initial value : Character\n\n   const handleSelectorChange = (event) => {\n      // console.log(event.target.value)\n      setSelector(event.target.value);\n   }\n\n   return (\n      <>\n      <div className=\"content-layout\">\n         <select \n         value={selector}\n         placeholder=\"Choose your path\" \n         className=\"select-item\"\n         onChange={handleSelectorChange}>\n            <option>Characters</option>\n            <option>Planets</option>\n            <option>Starships</option>\n         </select>\n\n        {/* non-HTML elements should be used in CURLY BRACES */}\n\n        {selector===\"Characters\" && swCharacters.map( (character) => ( //here && means if left side is true, then show the right side\n         <ItemLists key={character.name} item={character} handleCreateFan={handleCreateFan} type=\"chars\">\n            <p>gender: {character.gender}</p>\n            <p>birthday: {character.birth_year}</p>\n         </ItemLists>\n         ))}\n\n        {selector===\"Planets\" && swPlanets.map( (planets) => ( //here && means if left side is true, then show the right side\n            <ItemLists key={planets.name} item={planets} handleCreateFan={handleCreateFan}>\n               <p>orbital period: {planets.orbital_period}</p>\n               <p>rotational period: {planets.rotation_period}</p>\n            </ItemLists>\n         ))}\n      </div>\n      </>\n   )\n};"],"mappings":";;;AAAA,OAAOA,YAAP,MAAyB,4BAAzB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AAEA,SAASC,QAAT,QAAyB,OAAzB;AAEA,SAASC,SAAT,QAA0B,kBAA1B;;;AAEA,OAAO,MAAMC,OAAO,GAAG,QAAuB;EAAA;;EAAA,IAAtB;IAACC;EAAD,CAAsB;EAE3C,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,WAAD,CAAxC,CAF2C,CAEY;;EAEvD,MAAMM,oBAAoB,GAAIC,KAAD,IAAW;IACrC;IACAF,WAAW,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX;EACF,CAHD;;EAKA,oBACG;IAAA,uBACA;MAAK,SAAS,EAAC,gBAAf;MAAA,wBACG;QACA,KAAK,EAAEL,QADP;QAEA,WAAW,EAAC,kBAFZ;QAGA,SAAS,EAAC,aAHV;QAIA,QAAQ,EAAEE,oBAJV;QAAA,wBAKG;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QALH,eAMG;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QANH,eAOG;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAPH;MAAA;QAAA;QAAA;QAAA;MAAA,QADH,EAaGF,QAAQ,KAAG,YAAX,IAA2BP,YAAY,CAACa,GAAb,CAAmBC,SAAD;MAAA;MAAiB;MAC9D,QAAC,SAAD;QAAgC,IAAI,EAAEA,SAAtC;QAAiD,eAAe,EAAER,eAAlE;QAAmF,IAAI,EAAC,OAAxF;QAAA,wBACG;UAAA,uBAAYQ,SAAS,CAACC,MAAtB;QAAA;UAAA;UAAA;UAAA;QAAA,QADH,eAEG;UAAA,yBAAcD,SAAS,CAACE,UAAxB;QAAA;UAAA;UAAA;UAAA;QAAA,QAFH;MAAA,GAAgBF,SAAS,CAACG,IAA1B;QAAA;QAAA;QAAA;MAAA,QAD2B,CAb9B,EAoBGV,QAAQ,KAAG,SAAX,IAAwBN,SAAS,CAACY,GAAV,CAAgBK,OAAD;MAAA;MAAe;MACnD,QAAC,SAAD;QAA8B,IAAI,EAAEA,OAApC;QAA6C,eAAe,EAAEZ,eAA9D;QAAA,wBACG;UAAA,+BAAoBY,OAAO,CAACC,cAA5B;QAAA;UAAA;UAAA;UAAA;QAAA,QADH,eAEG;UAAA,kCAAuBD,OAAO,CAACE,eAA/B;QAAA;UAAA;UAAA;UAAA;QAAA,QAFH;MAAA,GAAgBF,OAAO,CAACD,IAAxB;QAAA;QAAA;QAAA;MAAA,QADqB,CApB3B;IAAA;MAAA;MAAA;MAAA;IAAA;EADA,iBADH;AA+BF,CAxCM;;GAAMZ,O;;KAAAA,O"},"metadata":{},"sourceType":"module"}